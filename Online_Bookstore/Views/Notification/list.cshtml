@model List<Online_Bookstore.Models.Notification>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Notifications";
    var currentUser = Session["CurrentUser"] as Online_Bookstore.Models.User;
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h2 mb-0">
                        <i class="fas fa-bell me-2 text-primary"></i>Notifications
                    </h1>
                    <p class="text-muted">Manage system notifications and alerts</p>
                </div>
                @if (currentUser != null && (currentUser.Role == "ADMIN" || currentUser.Role == "LIBRARIAN"))
                {
                    <a href="@Url.Action("AddNotification", "Notification")" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Add Notification
                    </a>
                }
            </div>
        </div>
    </div>

    <!-- Notifications List -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    @if (Model != null && Model.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var notification in Model)
                            {
                                <div class="list-group-item @(notification.IsRead ? "" : "bg-light")">
                                    <div class="d-flex w-100 justify-content-between align-items-start">
                                        <div class="flex-grow-1">
                                            <div class="d-flex align-items-center mb-2">
                                                @{
                                                    var iconClass = notification.Type switch
                                                    {
                                                        "overdue" => "fas fa-exclamation-triangle text-warning",
                                                        "system" => "fas fa-cog text-info",
                                                        "reservation" => "fas fa-calendar-check text-success",
                                                        _ => "fas fa-bell text-primary"
                                                    };
                                                }
                                                <i class="@iconClass me-2"></i>
                                                <h6 class="mb-0">@notification.Type.ToUpper()</h6>
                                                @if (!notification.IsRead)
                                                {
                                                    <span class="badge bg-primary ms-2">New</span>
                                                }
                                            </div>
                                            <p class="mb-2">@notification.Message</p>
                                            <small class="text-muted">
                                                <i class="fas fa-user me-1"></i>User ID: @notification.UserId
                                                <span class="mx-2">•</span>
                                                <i class="fas fa-clock me-1"></i>@notification.CreatedAt.ToString("MMM dd, yyyy HH:mm")
                                            </small>
                                        </div>
                                        <div class="ms-3">
                                            @if (currentUser != null && (currentUser.Role == "ADMIN" || currentUser.Role == "LIBRARIAN"))
                                            {
                                                <div class="btn-group-vertical" role="group">
                                                    <a href="@Url.Action("ShowEditForm", "Notification", new { id = notification.NotificationId })" 
                                                       class="btn btn-outline-warning btn-sm mb-1">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a href="@Url.Action("DeleteNotification", "Notification", new { id = notification.NotificationId })" 
                                                       class="btn btn-outline-danger btn-sm"
                                                       onclick="return confirm('Are you sure you want to delete this notification?')">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            }
                                            else
                                            {
                                                @if (!notification.IsRead)
                                                {
                                                    <button class="btn btn-outline-primary btn-sm" 
                                                            onclick="markAsRead(@notification.NotificationId)">
                                                        <i class="fas fa-check"></i> Mark as Read
                                                    </button>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-bell fa-4x text-muted mb-3"></i>
                            <h4 class="text-muted">No notifications found</h4>
                            <p class="text-muted">You're all caught up! No new notifications at the moment.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function markAsRead(notificationId) {
        // AJAX call to mark notification as read
        fetch('@Url.Action("MarkAsRead", "Notification")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ id: notificationId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }
</script>
